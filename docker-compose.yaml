version: '3.8'

services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: celery-worker
    command: celery -A tasks worker --loglevel=info
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/app/data
    depends_on:
      - redis
      - backend 
    environment:
      - PYTHONUNBUFFERED=1
    
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    image: mher/flower
    container_name: flower
    command: celery -A tasks --broker=redis://redis:6379/0 flower --port=5555 
    ports:
      - "5555:5555"
    depends_on:
      - redis

  backend:
    build:
      context: ./backend
    container_name: backend 
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # hot reload
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/app/data
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - TRAQ_CLIENT_ID=${TRAQ_CLIENT_ID}
      - TRAQ_CLIENT_SECRET=${TRAQ_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - API_URL=${API_URL}
      - FRONT_URL=${FRONT_URL}

  front:
    build:
      context: ./front
    container_name: front
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app  
    depends_on:
      - backend
    environment:
      - API_URL=${API_URL}

  sqlite-web:
    image: coleifer/sqlite-web
    container_name: sqlite-web
    ports:
      - "8080:8080"
    volumes:
      - data:/data
    environment:
      - SQLITE_DATABASE=/data/database.db
    depends_on:
      - backend

volumes:
  data:
